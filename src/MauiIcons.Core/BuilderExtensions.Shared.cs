namespace MauiIcons.Core;
public static class BuilderExtensions
{
    /// <summary>
	/// Initializes the .NET MAUI Icons Library
	/// </summary>
	/// <param name="builder"><see cref="MauiAppBuilder"/> generated by <see cref="MauiApp"/> </param>
	/// <param name="iconType"><see cref="IconType"/></param>
	/// <returns><see cref="MauiAppBuilder"/> initialized for <see cref="MauiIcons"/></returns>
    /// 
    //public static MauiAppBuilder UseMauiIcons(this MauiAppBuilder builder, IconType iconType = IconType.Fluent)
    //{
        
    //    // Global Var to Find User Selected Icon Type
    //    Globals.SelectedIconType = iconType;
    //    return builder.ConfigureFonts(fonts =>
    //    {
    //        switch (iconType)
    //        {
    //            case IconType.Fluent:
    //                fonts.AddEmbeddedResourceFont(typeof(BuilderExtensions).Assembly, Constants.TtfFluentIcons, Constants.FluentIcons);
    //                break;
    //            case IconType.Material:
    //                fonts.AddEmbeddedResourceFont(typeof(BuilderExtensions).Assembly, Constants.TtfMaterialIcons, Constants.MaterialIcons);
    //                break;
    //                // TODO Add Cuppertino and Default Icons
    //            //case IconType.Cuppertino:
    //            //    fonts.AddFont(Constants.TtfCuppertinoIcons, Constants.CuppertinoIcons);
    //            //    break;
    //            //case IconType.Default:
    //            //    fonts.AddFont(Constants.TtfFluentIcons, Constants.FluentIcons);
    //            //    fonts.AddFont(Constants.TtfMaterialIcons, Constants.MaterialIcons);
    //            //    fonts.AddFont(Constants.TtfCuppertinoIcons, Constants.CuppertinoIcons);
    //            //    break;
    //            case IconType.FluentandMaterial:
    //                fonts.AddEmbeddedResourceFont(typeof(BuilderExtensions).Assembly, Constants.TtfFluentIcons, Constants.FluentIcons);
    //                fonts.AddEmbeddedResourceFont(typeof(BuilderExtensions).Assembly, Constants.TtfMaterialIcons, Constants.MaterialIcons);
    //                break;
    //            default:
    //                fonts.AddEmbeddedResourceFont(typeof(BuilderExtensions).Assembly, Constants.TtfFluentIcons, Constants.FluentIcons);
    //                break;
    //        }
            
    //    });
    //}

    //public static MauiAppBuilder UseMauiIconsCore(this MauiAppBuilder builder, Action<IconOptions>? options = default)
    //{
    //    options?.Invoke(new IconOptions());
    //    return builder;
    //}



}
